name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          architecture: 'x64'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Gradle Build
        run: ./gradlew build --no-daemon

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/rt-chat-application:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Search for k8s directory
        run: find / -type d -name "k8s" 2>/dev/null

      - name: Install kubectl
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Start Minikube
        run: |
          minikube start --driver=docker --memory=4096 --cpus=2
          minikube status

      - name: Configure kubectl to use Minikube
        run: |
          kubectl config use-context minikube
          kubectl cluster-info  # Optional: Check cluster info to verify connectivity

      - name: Deploy to Minikube
        run: |
          kubectl apply -f /github/workspace/k8s/deployment.yaml -f /github/workspace/k8s/service.yaml
