name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          architecture: 'x64'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Gradle Build
        run: ./gradlew build --no-daemon

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/rt-chat-application:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure Login using Managed Identity
        uses: azure/login@v2
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install kubectl
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group finki2 --name RTCHATCluster

      - name: Create namespace if not exists
        run: kubectl create namespace rt-chat-cloud --dry-run=client -o yaml | kubectl apply -f -

      - name: Configure Docker Hub credentials
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          exists=$(echo "${{ steps.check_dockerhub_secret.outputs.exists }}")
          if [ "$exists" == "false" ]; then
            kubectl create secret docker-registry dockerhub-secret \
              --docker-server=https://index.docker.io/v1/ \
              --docker-username=$DOCKER_USERNAME \
              --docker-password=$DOCKER_PASSWORD \
              --namespace=rt-chat-cloud
          else
            echo "Docker Hub secret already exists. Skipping creation."
          fi

      - name: Deploy to AKS
        run: |
          kubectl apply -f https://raw.githubusercontent.com/BeratAhmetaj/RT-Chat-KIII/master/k8s/deployment.yaml -n rt-chat-cloud
          kubectl apply -f https://raw.githubusercontent.com/BeratAhmetaj/RT-Chat-KIII/master/k8s/service.yaml -n rt-chat-cloud

      - name: Get Pods
        run: kubectl get pods -n rt-chat-cloud

      - name: Get Services
        run: kubectl get services -n rt-chat-cloud

      - name: Get Kubernetes Namespaces
        run: kubectl get namespaces
